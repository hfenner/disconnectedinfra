---
- name: Create build and artifact directory
  file:
    path: "{{ item }}"
    state: directory
    mode: '01777'
  loop:
  - "{{ config_directory }}"
  - "{{ artifact_directory }}"
  - "{{ explode_directory }}"
  become: true

- name: Ensure build temp filesystem is mounted
  mount:
    name: "{{ config_directory }}"
    src: tmpfs
    fstype: tmpfs
    opts: size=512m
    state: mounted
  become: true

- name: Create http directory for Packer served files
  file:
    path: "{{ config_directory }}/{{ item }}"
    state: directory
    mode: '01777'
  become: true
  loop: "{{ build_filter }}"

- name: Copy packer file
  copy: 
    content: "{{ packer_all | to_nice_json }}"
    dest: "{{ config_directory }}/packerall.json"
    mode: 0644

- name: Copy supporting build files (i.e. configs, Kickstart)
  template:
    src: "{{ item.src }}"
    dest: "{{ config_directory }}/{{ item.dest }}"
    mode: 0644
  loop: "{{ config_files }}"
  
- name: Run packer
  shell: "packer build -force -only={{ active_build }} -parallel-builds={{ parallel_builds }} packerall.json"
  args:
    chdir: "{{ config_directory }}"
  environment: "{{ env }}"
  when: run_build

- name: Export builds in batches
  include_tasks: export.yml
  loop: "{{ build_filter | batch(batch_size) | list }}"
  when: export_build

- name: Convert OVF to OVA
  shell: "ovftool --overwrite {{ artifact_directory }}/{{ ddmmyy }}/{{ item.build_name }}/{{ item.build_name }}.ovf {{artifact_directory }}/{{ item.build_name }}-{{ ddmmyy }}.ova"
  args:
    chdir: "{{ config_directory }}"
  environment: "{{ env }}"
  loop: "{{ active_config }}"
  loop_control:
    label: "{{ item.build_name }}"
  when: export_build

- name: Symlink build to the latest tag
  file:
    src: "{{ artifact_directory }}/{{ item.build_name }}-{{ ddmmyy }}.ova"
    dest: "{{ artifact_directory }}/{{ item.build_name }}-latest.ova"
    state: link
  loop: "{{ active_config }}"
  when: export_build
